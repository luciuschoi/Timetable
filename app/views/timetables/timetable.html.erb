
<div style="width:13%;float:left;margin-left:2%;">
  <%= render 'timetables/timetable_btn_group', :current_timetable => @current_timetable %>
</div>

<div class = "timetable_container">

  <div class = "timetable_name_box">
    <p class = "lead"> <%=@current_timetable.name%></p>
  </div>

  <div class = "timetable_total_grade">
    <p class = "lead"> 21 학점</p>
  </div>
  
  <div class="lessons" style = "font-size:14px;">
    <%= render 'enrollments/table_form' %>
  </div>
</div>


<div class="right-container">
  <div class = "search_box">
    <%= form_tag timetable_path, :method => 'get', :class =>'form-inline rank-form' do %>
        <%= text_field_tag :search, params[:search],
            placeholder: :"과목 또는 교수님명을 입력해주세요!",
            :class => 'form-control  form-group rank-textf',
            :id => 'textfield' %>

        <%= button_tag(type: "submit", class: "btn btn-default btn-search", :id=> 'searchbtn') do %>
          <i class="glyphicon glyphicon-search"></i>
          <%end%> 
          <a href=<%=detailsearch_path%> id="detailbox" class= "iframe btn btn-default btn-zoomin"><span class= "glyphicon glyphicon-zoom-in"></span></a>

       
    <% end %>  
  </div>
  <% if @lectures.nil? %> 
      <div style = "text-align : center"> 검색결과가 없습니다.. </div>
    <% else %>
      <div>'<%=params[:search]%>' 검색, 총 <%=@lectures.count%>개의 검색 결과</div>
    <%end%> 
  <%= render 'search_table', :lectures => @lectures %>
     <!-- 검색 결과 -->

</div>


<div class = "my_cart_container">
  <div style = "width : 80%">
    <%= render 'enrollments/my_cart_table' %>
  </div>
</div>
<script>
$(document).ready(function() {
    $(".iframe").fancybox({
        type: 'iframe',
        'width':200,
        'height':200,
        'autoSize' : false
    });
});
</script> 




<script>

  // 사용할 앱의 JavaScript 키를 설정해 주세요.
    // Kakao.init('8af2fccfaf9fe878576de125c4ba83eb');

    // 카카오톡 링크 버튼을 생성합니다. 처음 한번만 호출하면 됩니다.
    // Kakao.Link.createTalkLinkButton({
    //   container: '#kakao-link-btn',
    //   label: '세종대 강의정보공유 사이트 구경오세요.',
    //   image: {
    //     src: 'http://xn--oy1bw5jn8ijte.com/assets/logo2-bfa40186d9f501f9483243509d751037a6da6190d053cef4cc15f1221d3ed4b1.png', //카카오톡에 보여질 이미지 
    //     width: '300',
    //     height: '200'
    //   },
    //   webButton: {
    //     text: '아뭐듣지.com',
    //     url: 'http://xn--oy1bw5jn8ijte.com' // 앱 설정의 웹 플랫폼에 등록한 도메인의 URL이어야 합니다.
    //   }
    // });
   

//   $('.glyphicon-star').click(function (){
//       var elements = document.getElementsByClassName('list-group')
//       var pagenation= document.getElementsByClassName('paginate')
//       for (var i = 0; i < elements.length; i++){
//           elements[i].style.display = 'none';
//       }
//       pagenation[0].style.display='none';
//   });


// //이미지 저장하는 코드 
//   $('#save_image_locally').click(function() {
//       html2canvas($('.target'),
//            {
//              letterRendering:true,
//              logging:true, 
//              background:"white",
//               onrendered: function(canvas) {
//                 var a = document.createElement('a');
//                 a.href = canvas.toDataURL("image/jpeg").replace("image/jpeg", "image/octet-stream");
//                 a.download = '아뭐듣지시간표.jpg';
//                 a.click();
//               }

//           });
//     });
//   timetable = $('#timetable');

//   // 겹치니 안겹치니?
//   //   1  겹치면     return 겹치는 강의명;
//   //   2  안겹치면    return " ";
//   function duplicate_lecture_name(s_row, e_row, col)
//   {
//     var col_num;
//     var duplicated_lec_name = "false";

//     for (h=0; h<col.length; h++){
//       col_num = col[h]+")";
//       for(i=s_row; i<=e_row; i++)
//       {
//         var row_num = i+")";
//         var time_row = timetable.find('tbody tr:nth-child('+row_num);
//         var lecture_cell = time_row.find('td:nth-child('+col_num);
        
//         var be_duplicated = $(lecture_cell).hasClass('lec');
//         if(be_duplicated == true)
//         {
//           first_cells = find_timetableLecture_First_cell(extract_lec_id_from_class( $(lecture_cell) )); 
//           duplicated_lec_name = $(first_cells)[0].find('.lec_name').html();
//           break;
//         }
        
//       }
//       if (be_duplicated == true) break;
//     }
//     return duplicated_lec_name;
//   }

//   function alert_branch(which_alert, duplicated_lec_name)
//   {
//     $('.alert-container').prepend('<div> </div>');
//     var alert_element = $('.alert-container div:first-child');
//     alert_element.addClass('alert');

//     if (which_alert == 'add_success')
//     {
//       alert_element.addClass('alert-success');
//       alert_element.css('display', 'block').html('강의가 추가 되었습니다.');
//       setTimeout(function(){
//         alert_element.fadeOut("slow");
//       }, 2000);    
//     }
//     else if (which_alert == 'del_success')
//     {
//       alert_element.addClass('alert-warning');
//       alert_element.css('display', 'block').html('강의가 삭제 되었습니다.');
//       setTimeout(function(){
//         alert_element.fadeOut("slow");
//       }, 2000);    
//     }
//     else if (which_alert == 'duplicate')
//     {
//       alert_element.addClass('alert-danger');
//       alert_element.css('display', 'block').html( duplicated_lec_name + '의 강의시간과 겹치는 강의입니다.');
//       setTimeout(function(){
//         alert_element.fadeOut("slow");
//       }, 2000);    
//     }

//   } // alert_branch func.

//   // 시간표에 담을 강의를 클릭하면, timetable에서 해당 강의가
//   // 속한 행과 열을 결정한다.

//   $('body').on('click', '.list-group',function(event){
//     $(this).off('mouseleave');
//     $(this).off('mouseenter');
//     var data = $(this).find('.lecture_time').html();
    
//     data = split_text_for_lectureTime(data);

//     // d_col | 요일 저장하는 배열 
//     // s_row | 시작시간 
//     // e_row | 종료시간 
//     var d_col = find_day_td(data[0]);
//     var s_row = find_begin_time_row(data[1]);
//     var e_row = find_end_time_row(data[2]);
    
//     var lec_id = $(this).attr('class').split('_')[1];
//     var lec_name = $(this).find('.subject').html();
//     var lec_professor = $(this).find('.professor').html();
//     lec_professor = lec_professor.split('/')[0];
//     var lec_place = $(this).find('.place').html();
//     var lec_isu = $(this).find('.isu').html();

//     var timetable_id = $('.lessons').attr('id');

//     var duplicated_lec_name = duplicate_lecture_name(s_row, e_row, d_col);

//     // DB 저장을 위한 ajax 전송
//     if (duplicated_lec_name != 'false')
//     {
//       alert_branch('duplicate', duplicated_lec_name);
//     }
//     else
//     {
//       default_fill_cell(s_row, e_row, d_col, lec_id, lec_name, lec_professor, lec_place, event.type);
//       make_cell_in_my_cart_table(lec_id, lec_name, lec_professor, lec_isu);
//       send_lecture_to_timetable(s_row,e_row,d_col,lec_id, timetable_id);
//     }
//   });

//   $('body').on('mouseenter', '.list-group',function(event){
    
//     var data = $(this).find('.lecture_time').html();
//         data = split_text_for_lectureTime(data);

//     var d_col = find_day_td(data[0]);
//     var s_row = find_begin_time_row(data[1]);
//     var e_row = find_end_time_row(data[2]);
        
//     var lec_id = $(this).attr('class').split(' ')[1];
//     lec_id = lec_id.split('_')[1];
//     var lec_name = ""; 
//     var lec_professor = ""; 
    
//     hover_fill_cell(s_row, e_row, d_col, lec_id, lec_name, lec_professor);
//   });


//   $('body').on('mouseleave', '.list-group',function(event){
//     var del_class = $(this).attr('class');
//     del_class = del_class.split(' ')[1];
//     delete_timetable_cell_background(del_class);
//   });


//   // 강의시간을 요일/시작시간/끝시간 배열 3개로 쪼개서 return
//   function split_text_for_lectureTime(data) 
//   {
//     // replace에서의 day를 1개 요일 vs 2개 요일로 비교해서 값을 따로 줘야한다.
//     // 요일이 1개 ex)화 인경우
//     if (data.length <= 12)
//     {
//       var day = data[0];
//     }
//     // 요일이 2개 ex)화목 인 경우
//     else if (data.length <= 13)
//     {
//       var day = data[0]+data[1];
//     }
//     else{}

//     data = data.replace(day,day+"-");
//     data = data.split('-');   
//     // data[0] 요일, data[1] 시작시간, data[2] 끝시간.
//     return data;
//   }


//   // timetable에서 강의 시간(행)을 찾습니다.
//   function find_begin_time_row(s_time)
//   { 
//     var rows = timetable.find('tbody th');
//     var refined_time = s_time.split(":");
//     var row_num;

//     rows.each(function(){
//       var row_each_time = $(this).find('div').html();
      
//       if( refined_time[0] == row_each_time ){
//         row_num = rows.index(this);
//         return;
//       }
//       else {      }
//     });
//     if (refined_time[1] == '30') return row_num+2;
//     else return row_num+1;
//   }

//   function find_end_time_row (e_time)
//   {
//     var rows = timetable.find('tbody th');
//     var refined_time = e_time.split(":");
//     var row_num;

//     rows.each(function(){
//       var row_each_time = $(this).find('div').html();
      
//       if( refined_time[0] == row_each_time ){
//         row_num = rows.index(this);
//         return;
//       }
//       else {      }
//     });
//     if (refined_time[1] == '30') return row_num+1;
//     else return row_num;
//   }

//   // 요일을 기준으로 몇열에 해당하는지 찾아 열값을 리턴.
//   function find_day_td(day)
//   {
//     var t_datas = timetable.find('thead th'); 
//     var td_num = [];

//     for (i=0; i<day.length; i++){
//       t_datas.each(function() {
//         td_each_data = $(this).html();
        
//         if (td_each_data == day[i]){
//           td_num.push(t_datas.index(this)+1);
//         } 
//         else{}
//       });
//     }
//     // nth:child 때문에 열값에 +1을 해야됨.
//     return td_num;
//   }

//   // 인자로 받은 시간/요일을 기준으로 background 채웁니다.
//   function hover_fill_cell(s_row, e_row, col, lec_id, lec_name, lec_professor)
//   {
//     var col_num;
//     var row_num;
//     var time_row;
//     var lecture_cell;
//     var first_cells = [];
//     //var class_arr = [];
//     for (h=0; h<col.length; h++)
//     {
//       col_num = col[h]+")";
//       for(i=s_row; i<=e_row; i++)
//       {
//         row_num = i+")";
//         time_row = timetable.find('tbody tr:nth-child('+row_num);
//         lecture_cell = time_row.find('td:nth-child('+col_num);

//         var be_duplicated = $(lecture_cell).hasClass('lec');

//         if (be_duplicated == false)
//         {
//           // lecture_cell.css('background','#eeeeee');
//           lecture_cell.addClass('not_duplicated');
//         }
//         else if (be_duplicated == true)
//         {
//           first_cells = find_timetableLecture_First_cell(extract_lec_id_from_class( $(lecture_cell) )); 
//           $(first_cells).each (function(){
//             //$(this).css('background','#fff3f2 !important').css('outline','1px solid #ec4e2c');
//             // $(this).addClass('lec_'+lec_id);
//             $(this).addClass('duplicated');
//           });
//         }
//       }
//     }    
//   }

//   function extract_lec_id_from_class(cell)
//   {
//     return cell.attr('class').split(' ')[0];
//   }

//   // 내가 등록하려는 강의와 겹치는 강의의 첫번쨰 cell 반환.
//   function find_timetableLecture_First_cell(lec_id)
//   {
//     var existed_cells = $('.lessons').find('td.'+lec_id);
    
//     var first_cells = [];

//     existed_cells.each (function(){
//       if($(this).attr('rowspan')) 
//       {
//         first_cells.push($(this));
//       } 
//     });
//     return first_cells;
//   }

//   function default_fill_cell(s_row, e_row, col, lec_id, lec_name, lec_professor, lec_place, event_string)
//   {
//     var col_num;
//     var row_num;
//     var time_row;
//     var lecture_cell;
//     // 클릭(빈셀, 채워진 셀)과 첫 로드 구분
//     var c_index = decide_cell_color();

//     for (h=0; h<col.length; h++)
//     {
//       col_num = col[h]+")";

//         for (i=s_row+1; i<=e_row; i++)
//         {
//           row_num = i+")";
//           time_row = timetable.find('tbody tr:nth-child('+row_num);
//           lecture_cell = time_row.find('td:nth-child('+col_num);
//           $(lecture_cell).css('display', 'none'); 
//           lecture_cell.addClass('lec_'+lec_id);
//           lecture_cell.addClass('lec');
//         }
//         var i = s_row;
//         row_num = i+")";
//         time_row = timetable.find('tbody tr:nth-child('+row_num);
        
//         lecture_cell = time_row.find('td:nth-child('+col_num);

//         lecture_cell.addClass('lec_'+lec_id); 
//         lecture_cell.addClass('lec');

//         lecture_cell.attr('rowspan', e_row - s_row + 1);

//         lecture_cell.css('border', '1px solid white');

//         if (event_string == 'ready')
//         {
//           lecture_cell.addClass('c'+c_index);
//           //lecture_cell.css('background','#fef1e6'); // 이거 
//         }
//         else if (event_string == 'click')
//         {
//           lecture_cell.addClass('temporary_fill');

//         }

//         mix_cell_text(lecture_cell, lec_id,lec_name,lec_professor, lec_place);  
//     }
//   }

//   // 셀 백그라운드 컬러 배열에서 index 결정
//   function decide_cell_color()
//   {
//     // my_cart_table에서 tbody의 tr 개수 저장
//     // tr 개수 / cell 개수 
//     // return 0,1,2,3,4,5
//     var my_cart_trs = $('.my_cart_container').find('tbody tr');
//     var index = 0;

//     for (var i = 0; i < my_cart_trs.length; i++) 
//     {
//       if($(my_cart_trs[i]).hasClass('has'))
//       {
//         index++;
//       }
//     }
//     $(my_cart_trs[index]).addClass('has');

//     index = index % 6;

//     return index;
//   }

//   function make_cell_in_my_cart_table(lec_id, lec_name, lec_professor, lec_isu)
//   {
//     var t_body = $('#my_cart_table').find('tbody');

//     var tr_contents;
//     var td_subject;
//     var td_professor;
//     var td_isu;
//     var td_del_btn;
//     var span_glyphicon;

//     tr_contents   = '<tr class = t_contents> </tr>';
//     td_subject    = '<td></td>';
//     td_professor  = '<td class = professor> </td>';
//     td_isu        = '<td class = isu></td>';
//     td_del_btn    = '<td class = del_btn></td>';
//     span_glyphicon= '<span class = glyphicon></span>';

//     var td_contents    = [lec_name, lec_professor, lec_isu, span_glyphicon];

//     $(t_body).append(tr_contents);
//     var tr_container = $(t_body).find('tr:last-child');

//     tr_container.append(td_subject).append(td_professor).append(td_isu).append(td_del_btn);
    
//     for (var i = 0; i < td_contents.length; i++) 
//     {
//       var temp_td = $(tr_container).find('td')[i];
//       $(temp_td).html(td_contents[i]);
//     }
//     $(tr_container).addClass('lec_'+lec_id);
//     $(tr_container).find('td:last-child span').addClass('glyphicon-remove');
    
//   }

//   function mix_cell_text(lec_cell, lec_id, lec_name, lec_professor, lec_place)
//   { 
//     //
//     var completed_content;
//     var content_box;      // span을 wrap중인 div 박스
//     var span_ln;          // div박스 안의 강의명           span
//     var span_lp;          // div박스 안의 교수명 span
//     var span_pl;          // div박스 안의 장소명 span
//     var span_info;        //            해당 강의평가 바로가기 span
//     var span_del;         //            삭제 span

//     content_box = '<div class = lec_box></div>';
    
//     span_pl     = '<span class = lec_place> </span>';
//     span_lp     = '<span class = lec_professor> </span>';
//     span_ln     = '<span class = lec_name> </span>';
//     span_del    = '<span class = del_btn> </span>';
//     a_info      = '<a> </a>'
//     span_info   = '<span class = info_btn> </span>';

//     var contents = [lec_name, lec_professor, lec_place];

//     // 1 element 추가
//     // 2 class 추가
//     // 3 value 추가

//     $(lec_cell).prepend(content_box);
//     content_box = $(lec_cell).find('div');
//     $(content_box).addClass('lec_'+lec_id);

//     $(content_box).prepend(span_pl).prepend(span_lp).prepend(span_ln);

//     for(var i = 0; i < contents.length; i++)
//     {
//       var temp_span = $(content_box).find('span')[i];
//       $(temp_span).css('display','inline-block');
//       $(temp_span).html(contents[i]);
//     }

//     $(content_box).append(span_info).append(span_del);
//     $(content_box).find('.del_btn').addClass('glyphicon glyphicon-remove');
//     $(content_box).find('.info_btn').addClass('glyphicon glyphicon-info-sign');

    
//     $(content_box).find('.info_btn').wrap(a_info);
//     $('.info_btn').parent().attr('href', 'http://localhost:3000/lectures/'+lec_id);

//   }


  
//   function send_lecture_to_timetable(s_row,e_row,d_col,lec_id, timetable_id) {
//     $.ajax({
//         url:'<%= add_enrollment_url %>',
//         type:'post',
//         data:{'begin_time':s_row, 'end_time':e_row, 'days':d_col,
//               'lecture_id':lec_id, 'timetable_id':timetable_id},
//         success:function()
//         {
//           alert_branch('add_success');
//         },
//         error:function()
//         {
//           alert_branch('duplicate');
//         }
//     });
//   }



//   $('body').on('click', '.lessons > .table-striped > tbody > tr > td > div > .del_btn' ,dynamic_delete);
//   $('body').on('click', '.my_cart_container #my_cart_table .t_contents .del_btn' ,dynamic_delete);

//   function dynamic_delete() {
//     var del_class = $(this).parent().attr('class').split(' ');

//       delete_timetable_cell(del_class[1]);
//       delete_cart_table_cell(del_class[1]);

//       var del_id = del_class[1].split('_');

//       var timetable_id = $('.lessons').attr('id');

//       $.ajax({
//           url:'<%= delete_enrollment_url %>',
//           type:'delete',
//           data:{'lecture_id':del_id[1], 'timetable_id':timetable_id},
//           success:function()
//           {
//             alert_branch('del_success');
//           },
//           error:function()
//           {
//             alert('삭제 실패했습니다... 다시 삭제 눌러주세요 ㅠㅠ');
//           }
//       });
//   }

//   function delete_timetable_cell_background(del_class_name)
//   {
//     var del_cell = $('.lessons').find('.duplicated');
//     var c_index = decide_cell_color();

//     del_cell.each (function(){
//         $(this).removeClass('duplicated');
//     });

//     del_cell = $('.lessons').find('.not_duplicated');
    
//     del_cell.each (function(){
//         $(this).removeClass('temporary_fill');
//         $(this).removeClass('not_duplicated');
//         if ($(this).hasClass('lec'))
//         {
//           $(this).addClass('c'+c_index);
//         }
//     });    
//   }

//   function delete_timetable_cell(del_class_name){
//     // lec_id 는 지워질 cell의 클래스 이름 
//     var del_cell = $('.lessons').find('td.'+del_class_name);

//     del_cell.each (function(){
//       var contents_box = $(this).find('div');
//       if ( $(contents_box).length >= 1 )
//       {
//         $(contents_box).find('span.'+del_class_name).html(''); 
//         $(this).attr('rowspan', '0');
//       }
//       else
//       {
//         $(this).css('display', 'table-cell');
//       }
//       $(this).css('background', ' ').css('color', ' ');
//       $(this).html('');
//       $(this).css('border', '0');
//       $(this).removeClass();
//       // 만약, span태그가 있으면 (=해당 시간에 강의가 등록되있다.) backgroud green
//     });
//   }

//   function delete_cart_table_cell(del_class_name)
//   {
//     var del_cell = $('.my_cart_container').find('tr.'+del_class_name);
//     $(del_cell).remove();

//   }



//   // 웹페이지 로드시, 현재 유저가 등록한 강의를 시간표에 보여준다.
//   jQuery( document ).ready(function( $ )
//   {   
//     // s_row | 강의 시작시간
//     // e_row | 강의 종료시간
    
//     var lec_id;
//     var lec_name;
//     var lec_professor;
//     var lec_place;
//     var event_string = 'ready';

//     var current_timetable_id = "<%= @current_timetable.id %>";
//     $('.lessons').attr('id', current_timetable_id);
//     <% @lectures_in_timetable.each do |lec_in_timetable| %>
      
//       var s_row = <%= lec_in_timetable.begin_time %>;
//       var e_row = <%= lec_in_timetable.end_time %>;
      
//       var d_col=[];
      
//       // 강의 시간이 하루인 경우
//       if (<%= lec_in_timetable.days.length%> <= 1){
//         d_col.push("<%= lec_in_timetable.days[0] %>");
//       }
//       // 강의 시간이 이틀인 경우 (화,목 / 수,금)
//       else if (<%= lec_in_timetable.days.length%> <= 2){
//         d_col.push("<%= lec_in_timetable.days[0] %>");
//         d_col.push("<%= lec_in_timetable.days[1] %>");
//       }

//       <% l = Lecture.find(lec_in_timetable.lecture_id) %>
//       lec_id = <%= l.id %>;
//       lec_name = "<%= l.subject %>";
//       lec_professor = "<%= l.professor %>";
//       lec_place = "<%= l.place %>";

//       // 처음 html 로드시, 사용자가 시간표에 등록한 강의들을 timetable cell에 채우는 함수 
//       default_fill_cell(s_row, e_row, d_col, lec_id, lec_name, lec_professor, lec_place, event_string);
//     <% end %>
//   }); 
</script>






